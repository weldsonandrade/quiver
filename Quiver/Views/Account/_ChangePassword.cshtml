@model Quiver.Models.ChangePasswordViewModel

<div class="modal animated fadeIn" id="mChangePassword" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-primary modal-sm" role="document" style="z-index: 9999999;">
        <div class="modal-content ">
            @using (Ajax.BeginForm("ChangePassword", null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onChangePasswordSuccess(data);" }, new { id = "form-changepassword" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Trocar senha</h4>
                </div>
                
                <div class="modal-body">

                    @Html.ValidationSummary(true)

                    @*<div class="input-group">
                            <div class="fg-line">
                                <div class="fg-line" style="min-height: 35px;">
                                    <div class="input-group form-group">
                                        <span class="input-group-addon">Senha atual</span>
                                        <div class="fg-line">
                                            <div class="select">
                                                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @placeholder = "", @autocomplete = "off" })
                                            </div>
                                            @Html.ValidationMessageFor(m => m.OldPassword)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>*@


                    @* Velha Senha do usuário *@
                    <div class="form-group fg-float" id="usuario-velha-senha">
                        <div class="fg-line">
                            @Html.PasswordFor(m => m.OldPassword, new { @class = "input-sm form-control fg-input", @id = "usuario-input-velha-senha", @autocomplete = "off", @onkeyup = "validarVelhaSenhaUsuario()" })
                            <label class="fg-label">Senha Atual</label>
                        </div>
                        <small class="help-block" id="mensagem-erro-velha-senha">Campo obrigatório.</small>
                    </div>
                    

                    @* Senha do usuário *@
                    <div class="form-group fg-float" id="usuario-senha">
                        <div class="fg-line">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "input-sm form-control fg-input", @id = "usuario-input-senha", @autocomplete = "off", @onkeyup = "validarSenhaUsuario()" })
                            <label class="fg-label">Nova Senha</label>
                        </div>
                        <small class="help-block" id="mensagem-erro-senha">Campo obrigatório.</small>
                    </div>

                    @*<div class="input-group">
                        <div class="fg-line">
                            <div class="fg-line" style="min-height: 35px;">
                                <div class="input-group form-group">
                                    <span class="input-group-addon">Nova Senha</span>
                                    <div class="fg-line">
                                        <div class="select">
                                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @placeholder = "", @autocomplete = "off" })
                                        </div>
                                        @Html.ValidationMessageFor(m => m.NewPassword)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@


                    @* Confirmar Senha do usuário *@
                    <div class="form-group fg-float" id="usuario-confirmar-senha">
                        <div class="fg-line">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input-sm form-control fg-input", @id = "usuario-input-confirmar-senha", @autocomplete = "off", @onkeyup = "validarConfirmarSenhaUsuario()" })
                            <label class="fg-label">Confirmar nova senha</label>
                        </div>
                        <small class="help-block" id="mensagem-erro-confirmar-senha"></small>
                    </div>

                    @*<div class="input-group">
                        <div class="fg-line">
                            <div class="fg-line" style="min-height: 35px;">
                                <div class="input-group form-group">
                                    <span class="input-group-addon">Confirmar Nova Senha</span>
                                    <div class="fg-line">
                                        <div class="select">
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "", @autocomplete = "off" })
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@


                    <small class="error">  @Html.ValidationMessageFor(m => m.OldPassword) </small>
                    <small class="error">  @Html.ValidationMessageFor(m => m.NewPassword) </small>
                    <small class="error">  @Html.ValidationMessageFor(m => m.ConfirmPassword) </small>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    <button type="submit" id="btnSalvarUsuario" onclick="validarTodosCampos()" class="btn btn-primary">Salvar</button>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript" src="/Scripts/template/functions.js"></script>



<script type="text/javascript">

    // Validações
    function validarVelhaSenhaUsuario() {
        var senha = validarTamanhoMinimo('usuario-input-velha-senha', '#usuario-velha-senha', '#mensagem-erro-velha-senha', 8);
        return senha;
    }

    function validarSenhaUsuario() {
        var senha = validarTamanhoMinimo('usuario-input-senha', '#usuario-senha', '#mensagem-erro-senha', 8);

        if (senha == true) {
            // Pois caso ele edite a senha o confirmar senha tem que verificar se eles estão iguais
            compararDoisItens('usuario-input-confirmar-senha', '#usuario-confirmar-senha', '#mensagem-erro-confirmar-senha', 'usuario-input-senha');
        }

        habilitarSalvar();
        return senha;
    }

    function validarConfirmarSenhaUsuario() {
        var resposta = compararDoisItens('usuario-input-confirmar-senha', '#usuario-confirmar-senha', '#mensagem-erro-confirmar-senha', 'usuario-input-senha');
        habilitarSalvar();
        return resposta;
    }


    function habilitarSalvar() {
        var confirmarSenha = $("#usuario-confirmar-senha").hasClass("has-success");
        var senha = $("#usuario-senha").hasClass("has-success");
        var velhaSenha = $("#usuario-velha-senha").hasClass("has-success");

        if ((velhaSenha == true) && (senha == true) && (confirmarSenha == true)) {
            $('#btnSalvarUsuario').prop("disabled", false);
            return false;
        }
        $('#btnSalvarUsuario').prop("disabled", true);
        return false;
    }


    // Caso tenha algum modo onde o usuário conseguiu deixar o botão habilitado mesmo sendo algo inválido 
    function validarTodosCampos() {

        if ((validarEmailUsuario() == true) && (validarSenhaUsuario() == true)(validarConfirmarSenhaUsuario() == true)) {
            $('#form-unidade').valid();
        }
    }

</script>